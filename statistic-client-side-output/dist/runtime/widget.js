System.register(["jimu-core","jimu-ui"],(function(t,e){var a={},o={};return{setters:[function(t){a.DataSourceComponent=t.DataSourceComponent,a.DataSourceManager=t.DataSourceManager,a.DataSourceStatus=t.DataSourceStatus,a.Immutable=t.Immutable,a.React=t.React},function(t){o.Button=t.Button,o.Loading=t.Loading,o.LoadingType=t.LoadingType}],execute:function(){t((()=>{var t={8891:t=>{"use strict";t.exports=a},726:t=>{"use strict";t.exports=o}},e={};function u(a){var o=e[a];if(void 0!==o)return o.exports;var r=e[a]={exports:{}};return t[a](r,r.exports,u),r.exports}u.d=(t,e)=>{for(var a in e)u.o(e,a)&&!u.o(t,a)&&Object.defineProperty(t,a,{enumerable:!0,get:e[a]})},u.o=(t,e)=>Object.prototype.hasOwnProperty.call(t,e),u.r=t=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},u.p="";var r={};return u.p=window.jimuConfig.baseUrl,(()=>{"use strict";u.r(r),u.d(r,{default:()=>o});var t=u(8891),e=u(726);const{useState:a}=t.React;function o(o){var u;const[r,n]=a(!1),c=()=>{var e,a;return t.DataSourceManager.getInstance().getDataSource(null===(a=null===(e=o.useDataSources)||void 0===e?void 0:e[0])||void 0===a?void 0:a.dataSourceId)},s=()=>{var e;return t.DataSourceManager.getInstance().getDataSource(null===(e=o.outputDataSources)||void 0===e?void 0:e[0])},l=()=>{var e;if(!s())return;if(!(c()&&(null===(e=o.config.statFunctions)||void 0===e?void 0:e.length)>0&&o.config.numberField))return s().setStatus(t.DataSourceStatus.NotReady),void s().setCountStatus(t.DataSourceStatus.NotReady);const a=o.config.statFunctions.asMutable().map((t=>({onStatisticField:o.config.numberField,outStatisticFieldName:t+"_output",statisticType:t})));c().query({outFields:["*"],outStatistics:a}).then((e=>{const a=e.records.map(((t,e)=>{const a=t,o=a.getData();return o.objectid=e,a.feature.attributes=o,a})),o=s();null==o||o.setSourceRecords(a),null==o||o.setStatus(t.DataSourceStatus.Unloaded),null==o||o.setCountStatus(t.DataSourceStatus.Unloaded),null==o||o.setRecords(a)}),(t=>{console.error(`${o.id} loading data error, `,t)}))};return o.useDataSources&&1===o.useDataSources.length?t.React.createElement("div",{className:"widget-use-feature-set",style:{width:"100%",height:"100%",maxHeight:"800px",overflow:"auto"}},t.React.createElement("h3",null,"The output data source is generated."),t.React.createElement("h5",null,"The data of the output data source is returned from a statistical query on the selected field and the selected statistical function."),t.React.createElement("h5",null,"The widget will list the records of the output data source."),t.React.createElement("h5",null,"If the widget's origin data source is changed (e.g. add a filter), the output data source won't update automatically. Please click the following button."),t.React.createElement(e.Button,{onClick:l,className:"mb-5"},"Update output data source"),t.React.createElement(t.DataSourceComponent,{useDataSource:o.useDataSources[0],onDataSourceCreated:t=>{l()},onCreateDataSourceFailed:()=>{l()}}),r&&t.React.createElement(e.Loading,{type:e.LoadingType.Secondary}),(null===(u=o.outputDataSources)||void 0===u?void 0:u[0])&&t.React.createElement(t.DataSourceComponent,{useDataSource:(0,t.Immutable)({dataSourceId:o.outputDataSources[0],mainDataSourceId:o.outputDataSources[0]}),widgetId:o.id},((e,a)=>{a.status===t.DataSourceStatus.Loading&&n(!0),a.status===t.DataSourceStatus.Unloaded&&n(!1);const o=e.getSchema().fields;return t.React.createElement(t.React.Fragment,null,t.React.createElement("div",null,"Loading state: ",a.status),e&&a.status===t.DataSourceStatus.Unloaded?t.React.createElement("div",null,t.React.createElement("div",{className:"mt-2"}),"Output data source records:",e&&e.getRecords().map(((e,a)=>t.React.createElement("div",{key:a},Object.keys(o).filter((t=>"objectid"!==t)).map(((a,u)=>t.React.createElement("div",{key:u},`${a}: ${e.getData()[`${o[a].jimuName}`]}`))))))):null)}))):t.React.createElement(t.React.Fragment,null,t.React.createElement("h3",null,"This widget demonstrates how to use statistical query results to generate a client-side output data source."),t.React.createElement("h4",null,"Please select a data source, a numerical field and a statistical function."))}})(),r})())}}}));